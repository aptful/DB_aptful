// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button createButton;

  @NonNull
  public final EditText idEdit;

  @NonNull
  public final TextView idText;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final EditText passEdit;

  @NonNull
  public final TextView passText;

  @NonNull
  public final TextView titleText;

  private LoginBinding(@NonNull LinearLayout rootView, @NonNull Button createButton,
      @NonNull EditText idEdit, @NonNull TextView idText, @NonNull Button loginButton,
      @NonNull EditText passEdit, @NonNull TextView passText, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.createButton = createButton;
    this.idEdit = idEdit;
    this.idText = idText;
    this.loginButton = loginButton;
    this.passEdit = passEdit;
    this.passText = passText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.createButton;
      Button createButton = ViewBindings.findChildViewById(rootView, id);
      if (createButton == null) {
        break missingId;
      }

      id = R.id.idEdit;
      EditText idEdit = ViewBindings.findChildViewById(rootView, id);
      if (idEdit == null) {
        break missingId;
      }

      id = R.id.idText;
      TextView idText = ViewBindings.findChildViewById(rootView, id);
      if (idText == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.passEdit;
      EditText passEdit = ViewBindings.findChildViewById(rootView, id);
      if (passEdit == null) {
        break missingId;
      }

      id = R.id.passText;
      TextView passText = ViewBindings.findChildViewById(rootView, id);
      if (passText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new LoginBinding((LinearLayout) rootView, createButton, idEdit, idText, loginButton,
          passEdit, passText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
