// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Signup3Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView IDEditSinupText;

  @NonNull
  public final TextView IDSinupText;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final TextView birthdayEditSinupText;

  @NonNull
  public final TextView birthdaySinupText;

  @NonNull
  public final Button btnOK;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final TextView keywordText;

  @NonNull
  public final TextView looksinupText;

  @NonNull
  public final TextView passwordEditSinupText;

  @NonNull
  public final TextView passwordSinupText;

  @NonNull
  public final TextView rule;

  @NonNull
  public final TextView ruleText;

  @NonNull
  public final TextView sinupOneLabel;

  private Signup3Binding(@NonNull LinearLayout rootView, @NonNull TextView IDEditSinupText,
      @NonNull TextView IDSinupText, @NonNull ImageView backButton,
      @NonNull TextView birthdayEditSinupText, @NonNull TextView birthdaySinupText,
      @NonNull Button btnOK, @NonNull Button cancelButton, @NonNull TextView keywordText,
      @NonNull TextView looksinupText, @NonNull TextView passwordEditSinupText,
      @NonNull TextView passwordSinupText, @NonNull TextView rule, @NonNull TextView ruleText,
      @NonNull TextView sinupOneLabel) {
    this.rootView = rootView;
    this.IDEditSinupText = IDEditSinupText;
    this.IDSinupText = IDSinupText;
    this.backButton = backButton;
    this.birthdayEditSinupText = birthdayEditSinupText;
    this.birthdaySinupText = birthdaySinupText;
    this.btnOK = btnOK;
    this.cancelButton = cancelButton;
    this.keywordText = keywordText;
    this.looksinupText = looksinupText;
    this.passwordEditSinupText = passwordEditSinupText;
    this.passwordSinupText = passwordSinupText;
    this.rule = rule;
    this.ruleText = ruleText;
    this.sinupOneLabel = sinupOneLabel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Signup3Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Signup3Binding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup3, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Signup3Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ID_edit__sinupText;
      TextView IDEditSinupText = ViewBindings.findChildViewById(rootView, id);
      if (IDEditSinupText == null) {
        break missingId;
      }

      id = R.id.ID_sinupText;
      TextView IDSinupText = ViewBindings.findChildViewById(rootView, id);
      if (IDSinupText == null) {
        break missingId;
      }

      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.birthday_edit__sinupText;
      TextView birthdayEditSinupText = ViewBindings.findChildViewById(rootView, id);
      if (birthdayEditSinupText == null) {
        break missingId;
      }

      id = R.id.birthday_sinupText;
      TextView birthdaySinupText = ViewBindings.findChildViewById(rootView, id);
      if (birthdaySinupText == null) {
        break missingId;
      }

      id = R.id.btnOK;
      Button btnOK = ViewBindings.findChildViewById(rootView, id);
      if (btnOK == null) {
        break missingId;
      }

      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.keywordText;
      TextView keywordText = ViewBindings.findChildViewById(rootView, id);
      if (keywordText == null) {
        break missingId;
      }

      id = R.id.looksinupText;
      TextView looksinupText = ViewBindings.findChildViewById(rootView, id);
      if (looksinupText == null) {
        break missingId;
      }

      id = R.id.password_edit__sinupText;
      TextView passwordEditSinupText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditSinupText == null) {
        break missingId;
      }

      id = R.id.password_sinupText;
      TextView passwordSinupText = ViewBindings.findChildViewById(rootView, id);
      if (passwordSinupText == null) {
        break missingId;
      }

      id = R.id.rule;
      TextView rule = ViewBindings.findChildViewById(rootView, id);
      if (rule == null) {
        break missingId;
      }

      id = R.id.ruleText;
      TextView ruleText = ViewBindings.findChildViewById(rootView, id);
      if (ruleText == null) {
        break missingId;
      }

      id = R.id.sinupOneLabel;
      TextView sinupOneLabel = ViewBindings.findChildViewById(rootView, id);
      if (sinupOneLabel == null) {
        break missingId;
      }

      return new Signup3Binding((LinearLayout) rootView, IDEditSinupText, IDSinupText, backButton,
          birthdayEditSinupText, birthdaySinupText, btnOK, cancelButton, keywordText, looksinupText,
          passwordEditSinupText, passwordSinupText, rule, ruleText, sinupOneLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
